PPS_t PPS_time; Invalidate PPS_time;
PPS_msecs PPS_drift; Invalidate PPS_drift;

{ double dt;
  PPS_time = BCtr_Bins[0];
  dt = dtime();
  dt = convert(PPS_time) - dt + floor(dt) + 0.5;
  dt = dt - floor(dt) - 0.5;
  PPS_drift = dt*1000;
  PPS_drift_record[PPS_sample] = PPS_drift;
  if (++PPS_sample >= PPS_DELAY) PPS_sample = 0;
  Validate PPS_time;
  Validate PPS_drift;
}

PPS_msecs PPS_min_drift; Invalidate PPS_min_drift;
depending on (1 Hz) {
  int i;
  double minval;
  minval = PPS_drift_record[0];
  for (i = 1; i < PPS_DELAY; ++i) {
    if (PPS_drift_record[i] < minval)
      minval = PPS_drift_record[i];
  }
  PPS_min_drift = minval;
  Validate PPS_min_drift;
}
